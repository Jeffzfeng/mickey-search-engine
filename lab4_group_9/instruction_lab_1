Lab 1 - Front End Instructions:
- The front end code gives the user an ability to type a phrase. It then returns a results page with the number of occurences of each word in that phrase. The front end also keeps a history of words searched by the user and displays the top 20 most used words on the homepage.
- All frontend code is written in lab1frontend.py
- To run it open a terminal and type 'python lab1frontend.py`
- Once you're on the home page type in any phrase you like and hit the search button
- You will be redirected to the results page which shows you a table. This table counts the number of occurences of each word in your sentence.
- Then go to the URL bar and type 'http://localhost:8080/' (without the single quotes)
- You will see that the page is updated and your searched phrase is now in the history table
- The history table shows you the top 20 count of all the words you've searched since the server is launched. It will get updated after every search.


Lab 1 - Backend instructions:

All modified/added objects can be found within these tags:

	""" -- Objects added for Lab 1 start -- """
	""" -- Objects added for Lab 1 end -- """

All modified/added methods can be found within these tags:

    	""" -- methods added for lab 1 start -- """
    	""" -- methods added for lab 1 end -- """


To run:

$python crawler.py  

When prompted with input, you can search for any word using its string,
and both the get_inverted_index() and get_resolved_inverted_index() functions will be ran to return the "document_id" and the "url string" that respectively cooresponds to the word string.
Type in "exit" as the string to exit the prompt.

urls.txt has already been updated to a simple os161 "fork" manual page that can confirm the correctness of the code.

*note that the function resolve_index MUST be ran before resolved_inverted_index will return the correct set*


Testcases for confirmation:

search for

"fork" -> word_id = 1, set([1])
	  word = "fork", set(['https://www.student.cs.uwaterloo.ca/~cs350/common/os161-man/syscall/fork.html'])

This is correct because fork is the first string found in the HTML code, and it only shows up in the first page, the fork page.

"reference" -> word_id = 4, set([1,2])
	       word = "reference", set(['https://www.student.cs.uwaterloo.ca/~cs350/common/os161-man/syscall/fork.html', u'https://www.student.cs.uwaterloo.ca/~cs350/common/os161-man/syscall/errno.html'])

This is also correct because reference is the fourth string found in the HTML code, and it shows up in the first page and also the second linked page.


"enosys" -> word_id = 172, set([2])
	    word = enosys, set([u'https://www.student.cs.uwaterloo.ca/~cs350/common/os161-man/syscall/errno.html'])
	    
This is also correct because the word enosys, only belongs on the second page and not the first.
	 
		 

